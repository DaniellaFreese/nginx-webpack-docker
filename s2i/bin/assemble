#!/bin/bash

set -e
set -x

echo "---> Installing application source"
cp -vRf /tmp/src/. ./

echo "---> Restoring NPM cache"
if [ -d /tmp/artifacts/.npm ] ; then
	cp -vRf /tmp/artifacts/.npm ./
fi

echo "----> Running npm install"
npm install

echo "---> Running Webpack on source"
npm run webpack

echo "---> Removing node_modules directory"
rm -rf node_modules/

if [ -d ./nginx-cfg ]; then
  if [ -d ./nginx-cfg/default.d ] ; then
    echo "---> Copying nginx default.d config files...."
    mkdir -p "${NGINX_DEFAULT_SERVER_CONFIGURATION_PATH}"
    if [ "$(ls -A ./nginx-cfg/default.d/*.conf)" ]; then
        cp -v ./nginx-cfg/default.d/*.conf "${NGINX_DEFAULT_SERVER_CONFIGURATION_PATH}"
    fi
    if [ "$(ls -A ./nginx-cfg/default.d/*.conf.erb)" ]; then
        cp -v ./nginx-cfg/default.d/*.conf.erb "${NGINX_DEFAULT_SERVER_CONFIGURATION_PATH}"
    fi
    chmod -R a+rwx "${NGINX_DEFAULT_SERVER_CONFIGURATION_PATH}"
    rm -rvf ./nginx-cfg/default.d
  fi

  if [ -d ./nginx-cfg/env.d ] ; then
    echo "---> Copying nginx env.d config files...."
    mkdir -p "${NGINX_ENV_SERVER_CONFIGURATION_PATH}"
    if [ "$(ls -A ./nginx-cfg/env.d/*.conf)" ]; then
        cp -v ./nginx-cfg/env.d/*.conf "${NGINX_ENV_SERVER_CONFIGURATION_PATH}"
    fi
    if [ "$(ls -A ./nginx-cfg/env.d/*.conf.erb)" ]; then
        cp -v ./nginx-cfg/env.d/*.conf.erb "${NGINX_ENV_SERVER_CONFIGURATION_PATH}"
    fi
    chmod -R a+rwx "${NGINX_ENV_SERVER_CONFIGURATION_PATH}"
    rm -rvf ./nginx-cfg/env.d
  fi

  echo "---> Copying nginx configuration files..."
  if [ "$(ls -A ./nginx-cfg/*.conf)" ]; then
    cp -v ./nginx-cfg/*.conf "${NGINX_CONFIGURATION_PATH}"
  fi
  if [ "$(ls -A ./nginx-cfg/*.conf.erb)" ]; then
    cp -v ./nginx-cfg/*.conf.erb "${NGINX_CONFIGURATION_PATH}"
  fi
  rm -rvf ./nginx-cfg
fi

echo "---> Fix permisions"

# Fix source directory permissions
fix-permissions ./

echo "---> Done"
